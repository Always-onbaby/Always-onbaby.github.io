import{_ as e,c as o,o as c,a as d}from"./app-C9H6PnRd.js";const s={},l=d('<h2 id="逻辑空值合并操作符和逻辑或操作符的区别" tabindex="-1"><a class="header-anchor" href="#逻辑空值合并操作符和逻辑或操作符的区别"><span>逻辑空值合并操作符和逻辑或操作符的区别</span></a></h2><p><code>res.rows ?? []</code> 和 <code>res.rows || []</code> 是两种不同的逻辑表达式，它们在处理空值或 falsy 值时有一些区别。</p><ol><li><p><code>res.rows ?? []</code>：这是 Nullish Coalescing 运算符（??）的使用方式。如果 <code>res.rows</code> 的值为 <code>null</code> 或 <code>undefined</code>，则该表达式将返回一个空数组 <code>[]</code>。否则，它将返回 <code>res.rows</code> 的值。该运算符只在左侧的值为 <code>null</code> 或 <code>undefined</code> 时才会触发默认值的使用。</p></li><li><p><code>res.rows || []</code>：这是逻辑或运算符（||）的使用方式。如果 <code>res.rows</code> 的值为 falsy（例如 <code>false</code>、<code>0</code>、空字符串等），则该表达式将返回一个空数组 <code>[]</code>。否则，它将返回 <code>res.rows</code> 的值。逻辑或运算符在左侧值为 falsy 时会触发默认值的使用。</p></li></ol><p>区别在于对于除了 <code>null</code> 和 <code>undefined</code> 外的其他 falsy 值（如 <code>false</code>、<code>0</code>、空字符串等），Nullish Coalescing 运算符仍然会将其视为有效值，而逻辑或运算符会将其视为 falsy 值并触发默认值的使用。</p><p>例如，假设 <code>res.rows</code> 的值为：</p><ul><li><code>null</code> 或 <code>undefined</code>：<code>res.rows ?? []</code> 将返回 <code>[]</code>，而 <code>res.rows || []</code> 也将返回 <code>[]</code>。</li><li><code>false</code>、<code>0</code>、空字符串等：<code>res.rows ?? []</code> 仍然将返回 <code>res.rows</code> 的值（例如 <code>false</code>、<code>0</code>、空字符串等），而 <code>res.rows || []</code> 将返回 <code>[]</code>。</li></ul><p>因此，如果你希望在 <code>res.rows</code> 的值为 <code>null</code> 或 <code>undefined</code> 时返回默认值 <code>[]</code>，而在其他 falsy 值时保留原始值，可以使用 Nullish Coalescing 运算符 <code>res.rows ?? []</code>。如果希望在 <code>res.rows</code> 的值为任何 falsy 值时返回默认值 <code>[]</code>，则可以使用逻辑或运算符 <code>res.rows || []</code>。</p>',7),r=[l];function a(n,i){return c(),o("div",null,r)}const _=e(s,[["render",a],["__file","逻辑空值合并操作符和逻辑或操作符的区别.html.vue"]]),f=JSON.parse('{"path":"/javaScript/%E9%80%BB%E8%BE%91%E7%A9%BA%E5%80%BC%E5%90%88%E5%B9%B6%E6%93%8D%E4%BD%9C%E7%AC%A6%E5%92%8C%E9%80%BB%E8%BE%91%E6%88%96%E6%93%8D%E4%BD%9C%E7%AC%A6%E7%9A%84%E5%8C%BA%E5%88%AB.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"逻辑空值合并操作符和逻辑或操作符的区别","slug":"逻辑空值合并操作符和逻辑或操作符的区别","link":"#逻辑空值合并操作符和逻辑或操作符的区别","children":[]}],"git":{"updatedTime":1715940084000,"contributors":[{"name":"chen","email":"usadaiyun@360.com","commits":1}]},"filePathRelative":"javaScript/逻辑空值合并操作符和逻辑或操作符的区别.md"}');export{_ as comp,f as data};
