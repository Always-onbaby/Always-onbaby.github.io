import{_ as e,c as t,o as i,a}from"./app-CyG7sY6s.js";const l={},s=a('<h3 id="格式化" tabindex="-1"><a class="header-anchor" href="#格式化"><span>格式化</span></a></h3><p>与其他贡献者共享代码时，你最不想做的事就是争论代码缩进应该使用 tabs 还是空格！幸好，Prettier 会根据预设配置的规则重新格式化代码，以保证代码整洁。运行 Prettier，你的所有 tabs 都将转换为空格，同时缩进、引号等也都将根据你的配置而改变。理想状态下，当你保存文件时，Prettier 会自动执行格式化操作。</p><ul><li>使用快捷键<code>Ctrl/Cmd + P</code>快速打开推展管理</li><li>粘贴<code>ext install esbenp.prettier-vscode</code></li><li>使用回车键安装</li></ul><h3 id="保存并自动格式化" tabindex="-1"><a class="header-anchor" href="#保存并自动格式化"><span>保存并自动格式化</span></a></h3><p>理想情况下，你应该在每次保存时自动格式化代码。VS Code 就包含该配置!</p><ul><li>使用快捷键<code>Ctrl/Cmd + Shift + P</code>快速打开首选项</li><li>输入<code>settings</code></li><li>回车</li><li>搜索栏输入<code>format on save</code>并勾选</li></ul><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>如果你的 ESLint 预设包含格式化规则，它们可能会与 Prettier 发生冲突。我们建议使用`eslint-config-prettier` 禁用你 ESLint 预设中的所有格式化规则，这样 ESLint 就只用于捕捉逻辑错误。如果你想在合并 PR 前强制执行文件的格式化，请在你的 CI 中使用 `prettier --check` 命令\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>',7),r=[s];function c(d,n){return i(),t("div",null,r)}const h=e(l,[["render",c],["__file","vsCode的配置.html.vue"]]),p=JSON.parse('{"path":"/javaScript/vsCode%E7%9A%84%E9%85%8D%E7%BD%AE.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":3,"title":"格式化","slug":"格式化","link":"#格式化","children":[]},{"level":3,"title":"保存并自动格式化","slug":"保存并自动格式化","link":"#保存并自动格式化","children":[]}],"git":{"updatedTime":1715940084000,"contributors":[{"name":"chen","email":"usadaiyun@360.com","commits":1}]},"filePathRelative":"javaScript/vsCode的配置.md"}');export{h as comp,p as data};
